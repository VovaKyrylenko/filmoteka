{"mappings":"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","sources":["src/JS/1_inputListener.js","src/JS/2_modalListener.js"],"sourcesContent":["import { filmBoxRef, formRef } from './helpers';\nimport { API } from './service';\nimport {\n  renderFilms,\n  pagination,\n  renderPagination,\n  listClickHandlerMain,\n} from './renderFunctions';\nimport { spiner } from './spiner.js';\nimport Notiflix from 'notiflix';\n\n(async () => {\n  spiner.start();\n  const popularFilmsList = await API.fetchPopularMovies();\n  renderFilms(popularFilmsList, filmBoxRef);\n  const paginationArr = pagination(API.getPage(), API.getMax());\n  renderPagination(paginationArr, filmBoxRef, listClickHandlerMain);\n  spiner.stop();\n})();\n\nasync function onSubmit(e) {\n  e.preventDefault();\n  const value = e.target[0].value;\n  if (value) {\n    spiner.start();\n    API.setSearchQuery(value);\n    const filmListData = await API.fetchKeyword();\n    if (!filmListData.length) {\n      Notiflix.Notify.warning('💔 Sorry but we can`t find films for this word');\n      spiner.stop();\n      return;\n    }\n    renderFilms(filmListData, filmBoxRef);\n    const paginationArr = pagination(API.getPage(), API.getMax());\n    renderPagination(paginationArr, filmBoxRef, listClickHandlerMain);\n    spiner.stop();\n  }\n}\n\nformRef.addEventListener('submit', onSubmit);\n","import * as basicLightbox from 'basiclightbox';\nimport { API } from './service';\nimport { filmBoxRef } from './helpers';\nimport { storage } from './localStorage.js';\nimport Notiflix from 'notiflix';\nimport 'basiclightbox/dist/basicLightbox.min.css';\n\nfilmBoxRef.addEventListener('click', onContainerClick);\n\nasync function onContainerClick(evt) {\n  if (evt.target.classList.contains('js-films-list')) {\n    return;\n  }\n\n  try {\n    const filmId = Number(\n      evt.target.closest('.movie_card').attributes.getNamedItem('js-id').value\n    );\n    const movie = await API.fetchById(filmId);\n    if (!movie)\n      throw new Error('❌ Something go wrong, so we can`t load your film');\n    const modal = createModal(renderModalMarcup(movie));\n    modal.show();\n    document.body.style.overflow = \"hidden\";\n    modalCloseByBackdropClick(modal);\n    checkAndDisableButtons(filmId, movie);\n\n    // Отримую доступ до кнопки показу трейлеру та приховую її\n    const trailerBtnRef = document.querySelector('.trailer-btn');\n    trailerBtnRef.hidden = true;\n\n    // У відповіді від сервера отримую інфо, чи є по обраному фільму масив з відео, а також перевіряю наявність саме трейлеру\n    const videos = movie.videos.results;\n    if (videos.length > 0) {\n      videos.every(video => !video.type.includes('Trailer'))\n        ? (trailerBtnRef.hidden = true)\n        : (trailerBtnRef.hidden = false);\n    }\n\n    // Додаю слухач на кнопку трейлера, колбек ф-я якої одразу створює модалку з трейлером та показує її\n    trailerBtnRef.addEventListener('click', () => {\n      const film = videos.find(film => {\n        if (film.type === 'Trailer') {\n          return film;\n        }\n      });\n      const trailerModalInsatance = createModalForTrailer(renderVideo(film));\n      trailerModalInsatance.show();\n      modalCloseByBackdropClick(trailerModalInsatance);\n    });\n  } catch (err) {\n    Notiflix.Notify.failure(err.message);\n    console.log(err.message);\n  }\n}\n\nfunction checkAndDisableButtons(filmId, movie) {\n  const btnWatched = document.querySelector('.movie__to-watched');\n  const btnQueue = document.querySelector('.movie__to-queue');\n\n  const setWatchedClick = e => {\n    e.preventDefault();\n    if (e.target.hasAttribute('js-disabled')) {\n      Notiflix.Notify.warning(\n        '🎬 Your film has already sucessfully been added'\n      );\n      return;\n    }\n    storage.addFilmToWatch(movie);\n    btnWatched.setAttribute('js-disabled', '');\n  };\n\n  const setQueueClick = e => {\n    e.preventDefault();\n    if (e.target.hasAttribute('js-disabled')) {\n      Notiflix.Notify.warning(\n        '🎬 Your film has already sucessfully been added'\n      );\n      return;\n    }\n    storage.addFilmToQueue(movie);\n    btnQueue.setAttribute('js-disabled', '');\n  };\n\n  if (storage.checkWatched(filmId)) btnWatched.setAttribute('js-disabled', '');\n  if (storage.checkQueue(filmId)) btnQueue.setAttribute('js-disabled', '');\n\n  btnWatched.addEventListener('click', setWatchedClick);\n  btnQueue.addEventListener('click', setQueueClick);\n}\n\nfunction createModal(markup) {\n  const modal = basicLightbox.create(markup, {\n    onShow: modalCloseByEsc,\n    onClose: () => document.body.style.overflow = \"\",\n  });\n\n  return modal;\n}\n\nfunction renderModalMarcup({\n  poster_path,\n  original_title,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n  overview,\n}) {\n  return `\n  <div class=\"modal\">\n    <button class=\"button__modal\" type=\"button\">\n    </button>\n    <div class=\"movie__description-card\">\n      <div class=\"div__movie-img\" >\n        <img\n          class=\"movie__img\"\n          src=\"https://image.tmdb.org/t/p/w500${poster_path}\"\n          alt=\"info of movie\"\n        />\n      </div>\n      <div class=\"movie__desc\">\n        <p class=\"movie__title\">${original_title}</p>\n        <table class=\"movie__characters\">\n          <tbody class=\"character__table\">\n            <tr>\n              <td class=\"character\">Vote / Votes</td>\n              <td class=\"character__item \"><span class=\"vote\">${vote_average.toFixed(\n                1\n              )}</span><span class=\"vote__slash\">/</span><span class=\"vote__grey\">${vote_count}</span></td>\n            </tr>\n            <tr>\n              <td class=\"character\">Popularity</td>\n              <td class=\"character__item\">${popularity.toFixed(1)}</td>\n            </tr>\n            <tr>\n              <td class=\"character\">Original Title</td>\n              <td class=\"character__item\">${original_title}</td>\n            </tr>\n            <tr>\n              <td class=\"character\">Genre</td>\n              <td class=\"character__item\">${genres[0].name}</td>\n            </tr>\n          </tbody>\n        </table>\n        <p class=\"movie__about\">About</p>\n        <p class=\"movie__about-description\">\n        ${overview}\n        </p>\n        <ul class=\"button__list\">\n          <li class=\"button__item\">\n            <button class=\"movie__to-watched\" type=\"button\">\n              add to Watched\n            </button>\n          </li>\n          <li class=\"button__item\">\n            <button class=\"movie__to-queue\" type=\"button\">add to queue</button>\n          </li>\n        </ul>\n        <button class=\"trailer-btn\" type=\"button\">watch trailer</button>\n      </div>\n    </div>\n  </div>`;\n}\n\nfunction modalCloseByBackdropClick(instance) {\n  const modalBtn = instance.element().querySelector('button');\n  const onBackdropClick = e => {\n    e.preventDefault();\n    instance.close();\n    modalBtn.removeEventListener('click', onBackdropClick);\n  };\n  modalBtn.addEventListener('click', onBackdropClick);\n}\n\nfunction modalCloseByEsc(instance) {\n  const onPressEsc = e => {\n    if (e.code !== 'Escape') return false;\n    instance.close();\n    document.removeEventListener('keydown', onPressEsc);\n  };\n  document.addEventListener('keydown', onPressEsc);\n}\n\nfunction createModalForTrailer(markup) {\n  const trailerModal = basicLightbox.create(markup, {\n    onShow: modalCloseByEsc,\n  });\n  return trailerModal;\n}\n\nfunction renderVideo({ key }) {\n  return `<iframe\n  width=\"1141\"\n  height=\"641\"\n  src=\"https://www.youtube.com/embed/${key}\"\n  frameborder=\"0\"\n  allowfullscreen\n></iframe>\n  <button type=\"button\" class=\"button__trailer--close\"></button>`;\n}\n"],"names":["$iCfuO","parcelRequire","$lm9xO","spiner","start","popularFilmsList","$9dB6Q","API","fetchPopularMovies","$KTnyM","renderFilms","filmBoxRef","paginationArr","pagination","getPage","getMax","renderPagination","listClickHandlerMain","stop","formRef","addEventListener","async","e","preventDefault","value","target","setSearchQuery","filmListData","fetchKeyword","length","$parcel$interopDefault","$7Y9D8","Notify","warning","$9B8F0","$09f74cb4f7260572$var$modalCloseByBackdropClick","instance","modalBtn","element","querySelector","onBackdropClick","close","removeEventListener","$09f74cb4f7260572$var$modalCloseByEsc","onPressEsc","code","document","evt","classList","contains","filmId","Number","closest","attributes","getNamedItem","movie","fetchById","Error","modal","markup","poster_path","original_title","vote_average","vote_count","popularity","genres","overview","toFixed","name","$09f74cb4f7260572$var$renderModalMarcup","create","onShow","onClose","body","style","overflow","show","btnWatched","btnQueue","setWatchedClick","hasAttribute","$gSWVZ","storage","addFilmToWatch","setAttribute","setQueueClick","addFilmToQueue","checkWatched","checkQueue","$09f74cb4f7260572$var$checkAndDisableButtons","trailerBtnRef","hidden","videos","results","every","video","type","includes","trailerModalInsatance","$09f74cb4f7260572$var$createModalForTrailer","key","$09f74cb4f7260572$var$renderVideo","find","film","err","failure","message","console","log"],"version":3,"file":"index.c8d0acd6.js.map"}