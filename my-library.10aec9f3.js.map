{"mappings":"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","sources":["src/my-library.js"],"sourcesContent":["import * as basicLightbox from 'basiclightbox';\nimport { API } from './JS/service';\nimport { filmBoxRef, listButton } from './JS/helpers';\nimport { storage } from './JS/localStorage';\nimport {\n  renderFilms,\n  pagination,\n  renderPagination,\n} from './JS/renderFunctions';\nimport { spiner } from './JS/spiner.js';\nimport Notiflix from 'notiflix';\nimport 'basiclightbox/dist/basicLightbox.min.css';\n\nlistButton.addEventListener('click', onClick);\n\nconst queueBtn = document.querySelector('.js-queue');\nqueueBtn.click();\n\nfunction onClick(evt) {\n  const initFunc = () => {\n    document\n      .querySelector('.js-watched')\n      .classList.toggle('buttons__style--focus');\n    document\n      .querySelector('.js-queue')\n      .classList.toggle('buttons__style--focus');\n    filmBoxRef.removeEventListener('click', onContainerClickWatch);\n    filmBoxRef.removeEventListener('click', onContainerClickQueue);\n  };\n\n  if (evt.target.classList.contains('js-watched')) {\n    spiner.start();\n    initFunc();\n    const films = storage.getTwentyFromWatch();\n    if (films.length === 0) {\n      filmBoxRef.innerHTML =\n        '<div style=\"margin-top: -60px; width: 100%;\"><img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJI_dlTsblb8ypQy_aqxxFpLE29DiCHLcQpC5X9JvayT3W3PVLuWGSWVX1TUfCGubH_BI&usqp=CAU\" style=\"width: 100%; object-fit: cover;\"></div>';\n      Notiflix.Notify.warning(\"🙈 You haven't watched films\");\n      spiner.stop();\n      return;\n    } else {\n      renderFilms(films, filmBoxRef);\n      const paginationArr = pagination(\n        storage.getPageWatch(),\n        storage.getMaxWatch()\n      );\n      filmBoxRef.setAttribute('data-id', 'watch-gallery');\n      renderPagination(paginationArr, filmBoxRef);\n      filmBoxRef.addEventListener('click', onContainerClickWatch);\n      spiner.stop();\n    }\n  } else if (evt.target.classList.contains('js-queue')) {\n    spiner.start();\n    initFunc();\n    const films = storage.getTwentyFromQueue();\n    if (films.length === 0) {\n      filmBoxRef.innerHTML =\n        '<div style=\"margin-top: -60px; width: 100%;\"><img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJI_dlTsblb8ypQy_aqxxFpLE29DiCHLcQpC5X9JvayT3W3PVLuWGSWVX1TUfCGubH_BI&usqp=CAU\" style=\"width: 100%; object-fit: cover;\"></div>';\n      Notiflix.Notify.warning(\"🗃 You haven't queued films\");\n      spiner.stop();\n      return;\n    } else {\n      renderFilms(films, filmBoxRef);\n      const paginationArr = pagination(\n        storage.getPageQueue(),\n        storage.getMaxQueue()\n      );\n      filmBoxRef.setAttribute('data-id', 'queue-gallery');\n      renderPagination(paginationArr, filmBoxRef);\n      filmBoxRef.addEventListener('click', onContainerClickQueue);\n      spiner.stop();\n    }\n  } else return;\n}\n\nfunction onContainerClickWatch(e) {\n  onContainerClick(e, 'watch');\n}\n\nfunction onContainerClickQueue(e) {\n  onContainerClick(e, 'queue');\n}\n\nasync function onContainerClick(evt, section) {\n  if (evt.target.classList.contains('js-films-list')) {\n    return;\n  }\n  filmBoxRef.removeEventListener('click', onContainerClickWatch);\n  filmBoxRef.removeEventListener('click', onContainerClickQueue);\n  try {\n    const filmId = Number(\n      evt.target.closest('.movie_card').attributes.getNamedItem('js-id').value\n    );\n    const movie = await API.fetchById(filmId);\n    if (!movie)\n      throw new Error('❌ Something go wrong, so we can`t load your film');\n\n    const modal = createModal(renderModalMarcup(movie, section), section);\n    modal.show();\n    modalCloseByBackdropClick(modal);\n    onDeleteFilm(filmId, modal, section);\n\n    // Отримую доступ до кнопки показу трейлеру та приховую її\n    const trailerBtnRef = document.querySelector('.trailer-btn');\n    trailerBtnRef.hidden = true;\n\n    // У відповіді від сервера отримую інфо, чи є по обраному фільму масив з відео, а також перевіряю наявність саме трейлеру\n    const videos = movie.videos.results;\n    if (videos.length > 0) {\n      videos.every(video => !video.type.includes('Trailer'))\n        ? (trailerBtnRef.hidden = true)\n        : (trailerBtnRef.hidden = false);\n    }\n\n    // Додаю слухач на кнопку трейлера, колбек ф-я якої одразу створює модалку з трейлером та показує її\n    trailerBtnRef.addEventListener('click', () => {\n      const film = videos.find(film => {\n        if (film.type === 'Trailer') {\n          return film;\n        }\n      });\n      const trailerModalInsatance = createModalForTrailer(renderVideo(film));\n      trailerModalInsatance.show();\n      modalCloseByBackdropClick(trailerModalInsatance);\n    });\n  } catch (err) {\n    Notiflix.Notify.failure(err.message);\n    console.log(err.message);\n  }\n}\n\nfunction createModal(markup, section) {\n  const modal = basicLightbox.create(markup, {\n    onShow: modalCloseByEsc,\n    onClose: instance => {\n      if (section == 'watch')\n        filmBoxRef.addEventListener('click', onContainerClickWatch);\n      else filmBoxRef.addEventListener('click', onContainerClickQueue);\n    },\n  });\n\n  return modal;\n}\n\nfunction renderModalMarcup(\n  {\n    poster_path,\n    original_title,\n    vote_average,\n    vote_count,\n    popularity,\n    genres,\n    overview,\n  },\n  section\n) {\n  let delBtnMarkup = '';\n  if (section == 'queue')\n    delBtnMarkup =\n      '<button class=\"movie__to-queue\" type=\"button\">Delete from Queue</button>';\n  else if (section == 'watch')\n    delBtnMarkup =\n      '<button class=\"movie__to-watched\" type=\"button\">Delete from Watched</button>';\n\n  return `\n  <div class=\"modal\">\n    <button class=\"button__modal\" type=\"button\">\n    </button>\n    <div class=\"movie__description-card\">\n      <div class=\"div__movie-img\" >\n        <img\n          class=\"movie__img\"\n          src=\"https://image.tmdb.org/t/p/w500${poster_path}\"\n          alt=\"info of movie\"\n        />\n      </div>\n      <div class=\"movie__desc\">\n        <p class=\"movie__title\">${original_title}</p>\n        <table class=\"movie__characters\">\n          <tbody class=\"character__table\">\n            <tr>\n              <td class=\"character\">Vote / Votes</td>\n              <td class=\"character__item \"><span class=\"vote\">${vote_average.toFixed(\n                1\n              )}</span><span class=\"vote__slash\">/</span><span class=\"vote__grey\">${vote_count}</span></td>\n            </tr>\n            <tr>\n              <td class=\"character\">Popularity</td>\n              <td class=\"character__item\">${popularity.toFixed(1)}</td>\n            </tr>\n            <tr>\n              <td class=\"character\">Original Title</td>\n              <td class=\"character__item\">${original_title}</td>\n            </tr>\n            <tr>\n              <td class=\"character\">Genre</td>\n              <td class=\"character__item\">${genres[0].name}</td>\n            </tr>\n          </tbody>\n        </table>\n        <p class=\"movie__about\">About</p>\n        <p class=\"movie__about-description\">\n        ${overview}\n        </p>\n        <ul class=\"button__list\">\n          <li class=\"button__item\">${delBtnMarkup}</li>\n          <button class=\"trailer-btn trailer-btn--mtzero\" type=\"button\">watch trailer</button>\n        </ul>\n      </div>\n    </div>\n  </div>`;\n}\n\nfunction modalCloseByBackdropClick(instance) {\n  const modalBtn = instance.element().querySelector('button');\n  const onBackdropClick = e => {\n    e.preventDefault();\n    instance.close();\n    modalBtn.removeEventListener('click', onBackdropClick);\n  };\n  modalBtn.addEventListener('click', onBackdropClick);\n}\n\nfunction modalCloseByEsc(instance) {\n  const onPressEsc = e => {\n    if (e.code !== 'Escape') return false;\n    instance.close();\n    document.removeEventListener('keydown', onPressEsc);\n  };\n  document.addEventListener('keydown', onPressEsc);\n}\n\nfunction createModalForTrailer(markup) {\n  const trailerModal = basicLightbox.create(markup, {\n    onShow: modalCloseByEsc,\n  });\n  return trailerModal;\n}\n\nfunction renderVideo({ key }) {\n  return `<iframe\n  width=\"1141\"\n  height=\"641\"\n  src=\"https://www.youtube.com/embed/${key}\"\n  frameborder=\"0\"\n  allowfullscreen\n></iframe>\n  <button type=\"button\" class=\"button__trailer--close\"></button>`;\n}\n\nfunction onDeleteFilm(filmId, modal, section) {\n  const btnWatched = document.querySelector('.movie__to-watched');\n  const btnQueue = document.querySelector('.movie__to-queue');\n\n  const deleteWatchedClick = e => {\n    e.preventDefault();\n    storage.delFilmFromWatch(filmId);\n    const filmsToWatch = storage.getTwentyFromWatch();\n    renderFilms(filmsToWatch, filmBoxRef);\n    const paginationArr = pagination(\n      storage.getPageWatch(),\n      storage.getMaxWatch()\n    );\n    renderPagination(paginationArr, filmBoxRef);\n    modal.close();\n    if (filmsToWatch.length === 0) {\n      const paginationUlRef = document.querySelector('.pagination');\n      paginationUlRef.innerHTML = '';\n      filmBoxRef.innerHTML = '';\n    }\n  };\n\n  const deleteQueueClick = e => {\n    e.preventDefault();\n    storage.delFilmFromQueue(filmId);\n    const filmsToQueue = storage.getTwentyFromQueue();\n    renderFilms(filmsToQueue, filmBoxRef);\n    const paginationArr = pagination(\n      storage.getPageQueue(),\n      storage.getMaxQueue()\n    );\n    renderPagination(paginationArr, filmBoxRef);\n    modal.close();\n    if (filmsToQueue.length === 0) {\n      const paginationUlRef = document.querySelector('.pagination');\n      paginationUlRef.innerHTML = '';\n    }\n  };\n\n  if (section == 'watch')\n    btnWatched.addEventListener('click', deleteWatchedClick);\n  else if (section == 'queue')\n    btnQueue.addEventListener('click', deleteQueueClick);\n}\n"],"names":["$bpxeT","parcelRequire","$865c390aa2d1ad34$var$onContainerClickWatch","e","$865c390aa2d1ad34$var$onContainerClick","$865c390aa2d1ad34$var$onContainerClickQueue","evt","section","$865c390aa2d1ad34$var$_onContainerClick","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","filmId","movie","modal","trailerBtnRef","videos","target","classList","contains","$jGMOa","filmBoxRef","removeEventListener","Number","closest","attributes","getNamedItem","value","$dauUa","API","fetchById","_ctx","sent","Error","$865c390aa2d1ad34$var$createModal","$865c390aa2d1ad34$var$renderModalMarcup","show","$865c390aa2d1ad34$var$modalCloseByBackdropClick","$865c390aa2d1ad34$var$onDeleteFilm","document","querySelector","hidden","results","length","every","video","type","includes","addEventListener","trailerModalInsatance","$865c390aa2d1ad34$var$createModalForTrailer","$865c390aa2d1ad34$var$renderVideo","find","film","$6JpON","Notify","failure","t0","message","console","log","markup","$dyT35","create","onShow","$865c390aa2d1ad34$var$modalCloseByEsc","onClose","instance","param","poster_path","original_title","vote_average","vote_count","popularity","genres","overview","delBtnMarkup","concat","toFixed","name","modalBtn","element","onBackdropClick","preventDefault","close","onPressEsc","code","key","btnWatched","btnQueue","$aNvF6","storage","delFilmFromWatch","filmsToWatch","getTwentyFromWatch","$jxsHo","renderFilms","paginationArr","pagination","getPageWatch","getMaxWatch","renderPagination","innerHTML","delFilmFromQueue","filmsToQueue","getTwentyFromQueue","getPageQueue","getMaxQueue","listButton","initFunc","toggle","$hmUQ5","spiner","start","films","warning","stop","setAttribute","films1","paginationArr1","click"],"version":3,"file":"my-library.10aec9f3.js.map"}