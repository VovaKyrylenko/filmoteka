{"mappings":"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","sources":["src/my-library.js"],"sourcesContent":["import * as basicLightbox from 'basiclightbox';\nimport { API } from './JS/service';\nimport { filmBoxRef, listButton } from './JS/helpers';\nimport { storage } from './JS/localStorage';\nimport {\n  renderFilms,\n  pagination,\n  renderPagination,\n} from './JS/renderFunctions';\nimport { spiner } from './JS/spiner.js';\nimport Notiflix from 'notiflix';\nimport 'basiclightbox/dist/basicLightbox.min.css';\n\nlistButton.addEventListener('click', onClick);\n\nconst queueBtn = document.querySelector('.js-queue');\nqueueBtn.click();\n\nfunction onClick(evt) {\n  const initFunc = () => {\n    document\n      .querySelector('.js-watched')\n      .classList.toggle('buttons__style--focus');\n    document\n      .querySelector('.js-queue')\n      .classList.toggle('buttons__style--focus');\n    filmBoxRef.removeEventListener('click', onContainerClickWatch);\n    filmBoxRef.removeEventListener('click', onContainerClickQueue);\n  };\n\n  if (evt.target.classList.contains('js-watched')) {\n    spiner.start();\n    initFunc();\n    const films = storage.getTwentyFromWatch();\n    if (films.length === 0) {\n      filmBoxRef.innerHTML = '';\n      Notiflix.Notify.warning(\"🙈 You haven't watched films\");\n      spiner.stop();\n      return;\n    } else {\n      renderFilms(films, filmBoxRef);\n      const paginationArr = pagination(\n        storage.getPageWatch(),\n        storage.getMaxWatch()\n      );\n      filmBoxRef.setAttribute('data-id', 'watch-gallery');\n      renderPagination(paginationArr, filmBoxRef);\n      filmBoxRef.addEventListener('click', onContainerClickWatch);\n      spiner.stop();\n    }\n  } else if (evt.target.classList.contains('js-queue')) {\n    spiner.start();\n    initFunc();\n    const films = storage.getTwentyFromQueue();\n    if (films.length === 0) {\n      filmBoxRef.innerHTML = '';\n      Notiflix.Notify.warning(\"🗃 You haven't queued films\");\n      spiner.stop();\n      return;\n    } else {\n      renderFilms(films, filmBoxRef);\n      const paginationArr = pagination(\n        storage.getPageQueue(),\n        storage.getMaxQueue()\n      );\n      filmBoxRef.setAttribute('data-id', 'queue-gallery');\n      renderPagination(paginationArr, filmBoxRef);\n      filmBoxRef.addEventListener('click', onContainerClickQueue);\n      spiner.stop();\n    }\n  } else return;\n}\n\nfunction onContainerClickWatch(e) {\n  onContainerClick(e, 'watch');\n}\n\nfunction onContainerClickQueue(e) {\n  onContainerClick(e, 'queue');\n}\n\nasync function onContainerClick(evt, section) {\n  if (evt.target.classList.contains('js-films-list')) {\n    return;\n  }\n  filmBoxRef.removeEventListener('click', onContainerClickWatch);\n  filmBoxRef.removeEventListener('click', onContainerClickQueue);\n  try {\n    const filmId = Number(\n      evt.target.closest('.movie_card').attributes.getNamedItem('js-id').value\n    );\n    const movie = await API.fetchById(filmId);\n    if (!movie)\n      throw new Error('❌ Something go wrong, so we can`t load your film');\n\n    const modal = createModal(renderModalMarcup(movie, section), section);\n    modal.show();\n    modalCloseByBackdropClick(modal);\n    onDeleteFilm(filmId, modal, section);\n\n    // Отримую доступ до кнопки показу трейлеру та приховую її\n    const trailerBtnRef = document.querySelector('.trailer-btn');\n    trailerBtnRef.hidden = true;\n\n    // У відповіді від сервера отримую інфо, чи є по обраному фільму масив з відео, а також перевіряю наявність саме трейлеру\n    const videos = movie.videos.results;\n    if (videos.length > 0) {\n      videos.every(video => !video.type.includes('Trailer'))\n        ? (trailerBtnRef.hidden = true)\n        : (trailerBtnRef.hidden = false);\n    }\n\n    // Додаю слухач на кнопку трейлера, колбек ф-я якої одразу створює модалку з трейлером та показує її\n    trailerBtnRef.addEventListener('click', () => {\n      const film = videos.find(film => {\n        if (film.type === 'Trailer') {\n          return film;\n        }\n      });\n      const trailerModalInsatance = createModalForTrailer(renderVideo(film));\n      trailerModalInsatance.show();\n      modalCloseByBackdropClick(trailerModalInsatance);\n    });\n  } catch (err) {\n    Notiflix.Notify.failure(err.message);\n    console.log(err.message);\n  }\n}\n\nfunction createModal(markup, section) {\n  const modal = basicLightbox.create(markup, {\n    onShow: modalCloseByEsc,\n    onClose: instance => {\n      if (section == 'watch')\n        filmBoxRef.addEventListener('click', onContainerClickWatch);\n      else filmBoxRef.addEventListener('click', onContainerClickQueue);\n    },\n  });\n\n  return modal;\n}\n\nfunction renderModalMarcup(\n  {\n    poster_path,\n    original_title,\n    vote_average,\n    vote_count,\n    popularity,\n    genres,\n    overview,\n  },\n  section\n) {\n  let delBtnMarkup = '';\n  if (section == 'queue')\n    delBtnMarkup =\n      '<button class=\"movie__to-queue\" type=\"button\">Delete from Queue</button>';\n  else if (section == 'watch')\n    delBtnMarkup =\n      '<button class=\"movie__to-watched\" type=\"button\">Delete from Watched</button>';\n\n  return `\n  <div class=\"modal\">\n    <button class=\"button__modal\" type=\"button\">\n    </button>\n    <div class=\"movie__description-card\">\n      <div class=\"div__movie-img\" >\n        <img\n          class=\"movie__img\"\n          src=\"https://image.tmdb.org/t/p/w500${poster_path}\"\n          alt=\"info of movie\"\n        />\n      </div>\n      <div class=\"movie__desc\">\n        <p class=\"movie__title\">${original_title}</p>\n        <table class=\"movie__characters\">\n          <tbody class=\"character__table\">\n            <tr>\n              <td class=\"character\">Vote / Votes</td>\n              <td class=\"character__item \"><span class=\"vote\">${vote_average.toFixed(\n                1\n              )}</span><span class=\"vote__slash\">/</span><span class=\"vote__grey\">${vote_count}</span></td>\n            </tr>\n            <tr>\n              <td class=\"character\">Popularity</td>\n              <td class=\"character__item\">${popularity.toFixed(1)}</td>\n            </tr>\n            <tr>\n              <td class=\"character\">Original Title</td>\n              <td class=\"character__item\">${original_title}</td>\n            </tr>\n            <tr>\n              <td class=\"character\">Genre</td>\n              <td class=\"character__item\">${genres[0].name}</td>\n            </tr>\n          </tbody>\n        </table>\n        <p class=\"movie__about\">About</p>\n        <p class=\"movie__about-description\">\n        ${overview}\n        </p>\n        <ul class=\"button__list\">\n          <li class=\"button__item\">${delBtnMarkup}</li>\n          <button class=\"trailer-btn trailer-btn--mtzero\" type=\"button\">watch trailer</button>\n        </ul>\n      </div>\n    </div>\n  </div>`;\n}\n\nfunction modalCloseByBackdropClick(instance) {\n  const modalBtn = instance.element().querySelector('button');\n  const onBackdropClick = e => {\n    e.preventDefault();\n    instance.close();\n    modalBtn.removeEventListener('click', onBackdropClick);\n  };\n  modalBtn.addEventListener('click', onBackdropClick);\n}\n\nfunction modalCloseByEsc(instance) {\n  const onPressEsc = e => {\n    if (e.code !== 'Escape') return false;\n    instance.close();\n    document.removeEventListener('keydown', onPressEsc);\n  };\n  document.addEventListener('keydown', onPressEsc);\n}\n\nfunction createModalForTrailer(markup) {\n  const trailerModal = basicLightbox.create(markup, {\n    onShow: modalCloseByEsc,\n  });\n  return trailerModal;\n}\n\nfunction renderVideo({ key }) {\n  return `<iframe\n  width=\"1141\"\n  height=\"641\"\n  src=\"https://www.youtube.com/embed/${key}\"\n  frameborder=\"0\"\n  allowfullscreen\n></iframe>\n  <button type=\"button\" class=\"button__trailer--close\"></button>`;\n}\n\nfunction onDeleteFilm(filmId, modal, section) {\n  const btnWatched = document.querySelector('.movie__to-watched');\n  const btnQueue = document.querySelector('.movie__to-queue');\n\n  const deleteWatchedClick = e => {\n    e.preventDefault();\n    storage.delFilmFromWatch(filmId);\n    const filmsToWatch = storage.getTwentyFromWatch();\n    renderFilms(filmsToWatch, filmBoxRef);\n    const paginationArr = pagination(\n      storage.getPageWatch(),\n      storage.getMaxWatch()\n    );\n    renderPagination(paginationArr, filmBoxRef);\n    modal.close();\n    if (filmsToWatch.length === 0) {\n      const paginationUlRef = document.querySelector('.pagination');\n      paginationUlRef.innerHTML = '';\n      filmBoxRef.innerHTML = '';\n    }\n  };\n\n  const deleteQueueClick = e => {\n    e.preventDefault();\n    storage.delFilmFromQueue(filmId);\n    const filmsToQueue = storage.getTwentyFromQueue();\n    renderFilms(filmsToQueue, filmBoxRef);\n    const paginationArr = pagination(\n      storage.getPageQueue(),\n      storage.getMaxQueue()\n    );\n    renderPagination(paginationArr, filmBoxRef);\n    modal.close();\n    if (filmsToQueue.length === 0) {\n      const paginationUlRef = document.querySelector('.pagination');\n      paginationUlRef.innerHTML = '';\n    }\n  };\n\n  if (section == 'watch')\n    btnWatched.addEventListener('click', deleteWatchedClick);\n  else if (section == 'queue')\n    btnQueue.addEventListener('click', deleteQueueClick);\n}\n"],"names":["$9B8F0","parcelRequire","$iCfuO","listButton","addEventListener","evt","initFunc","document","querySelector","classList","toggle","filmBoxRef","removeEventListener","$fc8e7c71b3b7ed96$var$onContainerClickWatch","$fc8e7c71b3b7ed96$var$onContainerClickQueue","target","contains","$lm9xO","spiner","start","films","$gSWVZ","storage","getTwentyFromWatch","length","innerHTML","$parcel$interopDefault","$7Y9D8","Notify","warning","stop","$KTnyM","renderFilms","paginationArr","pagination","getPageWatch","getMaxWatch","setAttribute","renderPagination","getTwentyFromQueue","getPageQueue","getMaxQueue","e","$fc8e7c71b3b7ed96$var$onContainerClick","async","section","filmId","Number","closest","attributes","getNamedItem","value","movie","$9dB6Q","API","fetchById","Error","modal","markup","create","onShow","$fc8e7c71b3b7ed96$var$modalCloseByEsc","onClose","instance","$fc8e7c71b3b7ed96$var$createModal","poster_path","original_title","vote_average","vote_count","popularity","genres","overview","delBtnMarkup","toFixed","name","$fc8e7c71b3b7ed96$var$renderModalMarcup","show","$fc8e7c71b3b7ed96$var$modalCloseByBackdropClick","btnWatched","btnQueue","deleteWatchedClick","preventDefault","delFilmFromWatch","filmsToWatch","close","deleteQueueClick","delFilmFromQueue","filmsToQueue","$fc8e7c71b3b7ed96$var$onDeleteFilm","trailerBtnRef","hidden","videos","results","every","video","type","includes","film1","find","film","trailerModalInsatance","key","$fc8e7c71b3b7ed96$var$renderVideo","err","failure","message","console","log","modalBtn","element","onBackdropClick","onPressEsc","code","click"],"version":3,"file":"my-library.0fe8af6a.js.map"}